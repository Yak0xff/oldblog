{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"postlist":[{"title":"iOS中Log同步获取与重定向","uid":"ea3e901619c09b0b5da7b4018126c113","slug":"2019-01-22-iOS_NSLog","date":"2023-05-19T08:33:48.022Z","updated":"2023-05-19T08:33:48.022Z","comments":true,"path":"api/articles/2019-01-22-iOS_NSLog.json","keywords":null,"cover":null,"text":"在iOS开发的过程中，经常会使用NSLog作为调试和查看相关数据的输出口，该方法连接Xcode构建项目时能够实时输出开发者在代码线中打印的日志。但是在断开Xcode并使用真机测试的时候，经常会无法查看真机的实时日志，导致一些问题难以追查和确定，导致问题的定位与解决花费较长的时间，...","link":"","photos":[],"count_time":{"symbolsCount":"9.5k","symbolsTime":"9 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"iOS虚拟内存管理","uid":"11480c51ae26bed2fd1029069074ca32","slug":"2019-01-22-iOS_VMManage","date":"2023-05-19T08:33:48.022Z","updated":"2023-05-19T08:33:48.022Z","comments":true,"path":"api/articles/2019-01-22-iOS_VMManage.json","keywords":null,"cover":"/images/vm/memory_manage.jpg","text":"虚拟内存是一种允许操作系统避开物理RAM限制的内存管理机制。虚拟内存管理器为每个进程创建一个逻辑地址空间或者虚拟内存地址空间，并且将它分配为相同大小的内存块，可称为页。处理器与内存管理单元MMU维持一个页表来映射程序逻辑地址空间到计算机RAM的硬件地址。当程序的代码访问内存中的一...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"iOS开发隐藏技能如何开启","uid":"2d699b2c1e0ab59b8228bca658a563da","slug":"2019-03-08-iOS_Tips","date":"2023-05-19T08:33:48.026Z","updated":"2023-05-19T08:33:48.026Z","comments":true,"path":"api/articles/2019-03-08-iOS_Tips.json","keywords":null,"cover":"/images/ios-jq/logo.jpeg","text":"在iOS的开发过程中，我们经常会遇到一些需要关心但是无法直接得到的信息，本文记录了一些能够开启IDE隐藏功能的方法，帮助开发者了解更多的信息等。 1. 在 Xcode 中追踪构建时间在使用Xcode进行项目的编译和打包的时候，总是耗时的，而这个时间Xcode本身是具有统计功能的。...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"浅谈iOS架构模式","uid":"7587d0e7690fa9850e8d9b7745fb8f05","slug":"2019-09-29-ios-architecture-patterns","date":"2023-05-19T08:33:48.026Z","updated":"2023-05-19T08:33:48.026Z","comments":true,"path":"api/articles/2019-09-29-ios-architecture-patterns.json","keywords":null,"cover":"/images/iOSArchitecturePatterns/cover.jpeg","text":"每一个软件开发者在开始学习软件开发的时候，可能都不清楚软件的架构设计是什么样的，仅仅是依靠前人的方式进行代码开发的，至少本人是这样的。慢慢熟悉了软件开发后，对于软件代码如何更加合理的进行组织，以前的开发为什么是那样进行组织的便有了有些理解。其实这一切都是软件的架构模式。 对于iO...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"关于iOS App启动时间的那些事","uid":"065e711203c90529e076df9f2cdf951d","slug":"2019-10-30-app-start-time-measure-and-improvement","date":"2023-05-19T08:33:48.026Z","updated":"2023-05-19T08:33:48.026Z","comments":true,"path":"api/articles/2019-10-30-app-start-time-measure-and-improvement.json","keywords":null,"cover":"/images/start-time/cover.jpg","text":"在iOS应用程序的开发过程中，应用的启动时长可谓是影响应用程序用户体验的第一要素，过长的应用启动耗时，势必带来用户的长时间等待，直接让用户失去了对应用程序进一步体验的兴趣，影响应用程序在用户心中的印象。一般情况下，应用程序开发完成上线后，接下来就是针对架构、性能、业务进行进一步优...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"Swift语言中的轻量级API设计","uid":"9bf30773ec01d0aa2cdc72baf1be3d0d","slug":"2019-11-28-lightweight-api-design-in-swift","date":"2023-05-19T08:33:48.026Z","updated":"2023-05-19T08:33:48.026Z","comments":true,"path":"api/articles/2019-11-28-lightweight-api-design-in-swift.json","keywords":null,"cover":"/images/lightweight-api/cover.jpg","text":"Swift语言自诞生以来，总是或多或少受到人们的非议，新生的编程语言难免有些不够尽善尽美，但是哪种编程语言是尽善尽美的呢？OC语言算得上是一种古老的面向对象语言了，发展至今，其版本仍处于2.0，但是Apple为了让其看起来强大一点，增加了很多特性，例如Block、instance...","link":"","photos":[],"count_time":{"symbolsCount":"7.8k","symbolsTime":"7 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"iOS内存管理小结","uid":"efbbbd2e93d0b6b1478e69b9a9de5940","slug":"2020-06-17-iOS-memory-manage-tips","date":"2023-05-19T08:33:48.030Z","updated":"2023-05-19T08:33:48.030Z","comments":true,"path":"api/articles/2020-06-17-iOS-memory-manage-tips.json","keywords":null,"cover":null,"text":"内存管理是指软件运行时对计算机内存资源的分配和使用的技术。其最主要的目的是如何高效，快速的分配，并且在适当的时候释放和回收内存资源。在早起的iOS开发中多采用MRC（手动引用计数）来进行内存管理，iOS 5引入了ARC（自动引用计数），90%以上的内存管理问题都交给了系统去进行，...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}}]}