{"total":62,"pageSize":12,"pageCount":6,"data":[{"title":"\\#16\\ 优先级队列","uid":"5d749126a5c6ef9bea973d557d834975","slug":"2020-01-12-Data-Structures-&-Algorithms-in-Swift-16","date":"2023-05-13T14:28:22.148Z","updated":"2023-05-13T14:28:22.148Z","comments":true,"path":"api/articles/2020-01-12-Data-Structures-&-Algorithms-in-Swift-16.json","cover":"/images/Data-Structures-&-Algorithms-in-Swift/16/cover.png","text":"队列是一种先进先出（FIFO）的数据结构，而优先级队列是另一种队列结构，其可替代队列的先进先出顺序，该队列中的元素有着优先级的顺序。一个优先级队列也可以是： 最大优先级队列：队列中最前面的元素具有最高优先级； 最小优先级队列：队列中最前面的元素具有最低优先级。 当需要在给定的元素...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Data Structures & Algorithms in Swift","slug":"Data-Structures-Algorithms-in-Swift","count":20,"path":"api/categories/Data-Structures-Algorithms-in-Swift.json"}],"tags":[{"name":"Swift中的数据结构与算法","slug":"Swift中的数据结构与算法","count":20,"path":"api/tags/Swift中的数据结构与算法.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"\\#17\\ 排序算法O(n^2)","uid":"8ac62db54bf242691e8bc332c52f0b5b","slug":"2020-01-15-Data-Structures-&-Algorithms-in-Swift-17","date":"2023-05-13T14:28:22.148Z","updated":"2023-05-13T14:28:22.148Z","comments":true,"path":"api/articles/2020-01-15-Data-Structures-&-Algorithms-in-Swift-17.json","cover":"/images/Data-Structures-&-Algorithms-in-Swift/17/cover.jpg","text":"**O(n^2)**的时间复杂度并不是一个最佳的性能表现，但是在某些情况下，该类别的排序算法非常有用，此类算法的空间复杂度表现良好，仅仅需要O(1)的恒定的额外内存空间，对于小型数据集来说，此类排序算法比更为复杂的排序算法更为有利。 在本文中，将学习饿三种不同的、O(n^2)时间...","link":"","photos":[],"count_time":{"symbolsCount":"7.1k","symbolsTime":"6 mins."},"categories":[{"name":"Data Structures & Algorithms in Swift","slug":"Data-Structures-Algorithms-in-Swift","count":20,"path":"api/categories/Data-Structures-Algorithms-in-Swift.json"}],"tags":[{"name":"Swift中的数据结构与算法","slug":"Swift中的数据结构与算法","count":20,"path":"api/tags/Swift中的数据结构与算法.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"\\#18\\ 归并排序（Merge Sort）","uid":"05deaa37bb6b9b668ab83d05b4918b64","slug":"2020-01-30-Data-Structures-&-Algorithms-in-Swift-18","date":"2023-05-13T14:28:22.148Z","updated":"2023-05-13T14:28:22.148Z","comments":true,"path":"api/articles/2020-01-30-Data-Structures-&-Algorithms-in-Swift-18.json","cover":"/images/Data-Structures-&-Algorithms-in-Swift/18/cover.jpg","text":"归并排序[Merge Sort]是最有效的排序算法之一，它的时间复杂度为O(n log n)，是所有通用排序算法中速度最快的一种。归并排序背后的思想是分而治之，即将一个大问题分解成多个更小、更易于解决的问题，然后将各个小问题的结果合并为最终结果。归并排序的终极秘诀是先拆分后合并。...","link":"","photos":[],"count_time":{"symbolsCount":"3.7k","symbolsTime":"3 mins."},"categories":[{"name":"Data Structures & Algorithms in Swift","slug":"Data-Structures-Algorithms-in-Swift","count":20,"path":"api/categories/Data-Structures-Algorithms-in-Swift.json"}],"tags":[{"name":"Swift中的数据结构与算法","slug":"Swift中的数据结构与算法","count":20,"path":"api/tags/Swift中的数据结构与算法.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"\\#19\\ 基数排序（Radix Sort）","uid":"1eff6ae9330e74043f153497674d46df","slug":"2020-02-01-Data-Structures-&-Algorithms-in-Swift-19","date":"2023-05-13T14:28:22.148Z","updated":"2023-05-13T14:28:22.148Z","comments":true,"path":"api/articles/2020-02-01-Data-Structures-&-Algorithms-in-Swift-19.json","cover":"/images/Data-Structures-&-Algorithms-in-Swift/19/cover.jpg","text":"**基数排序[Radix Sort]**是一种在线性时间内对整数进行排序的非比较算法。 为了简单起见，在本文中将关注以10为基数的整数排序，以及基数排序中的*最小有效位[LSD]*的变体等。 示例为了进行基数排序的工作方式，假设需要对如下的集合进行排序： var array &#...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Data Structures & Algorithms in Swift","slug":"Data-Structures-Algorithms-in-Swift","count":20,"path":"api/categories/Data-Structures-Algorithms-in-Swift.json"}],"tags":[{"name":"Swift中的数据结构与算法","slug":"Swift中的数据结构与算法","count":20,"path":"api/tags/Swift中的数据结构与算法.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"基于MFCC的语音数据特征提取概述","uid":"c98e5d32ae2d193866c4e1eb0feb55b3","slug":"2018-07-24-speech-recognation-mfcc","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-07-24-speech-recognation-mfcc.json","cover":"/images/speech-recognition/audio_draw.png","text":"1. 概述语音是人类之间沟通交流的最直接也是最快捷方便的一种手段，而实现人类与计算机之间畅通无阻的语音交流，一直是人类追求的一个梦想。 伴随着移动智能设备的普及，各家移动设备的厂家也开始在自家的设备上集成了语音识别系统，像Apple Siri、Microsoft Cortana、...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习 MFCC","slug":"机器学习-MFCC","count":1,"path":"api/tags/机器学习-MFCC.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"11条数据化运营不得不知的数据预处理经验（无码篇）","uid":"4e8d84f448a6e8b441c0b97b84207797","slug":"2018-07-26-11-tips","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-07-26-11-tips.json","cover":null,"text":"数据预处理是数据化运营过程中重要的环节，直接影响着后期所有的数据工作质量和价值输出。从数据预处理的主要内容来看，包括数据清洗、转换、归约、聚合、抽样等。本文将摒弃理论和方法说教，直接介绍内容本身可能遇到的问题以及应对方法。 3.1 数据清洗：缺失值、异常值和重复值的处理 清洗：是...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"数据科学","slug":"数据科学","count":2,"path":"api/categories/数据科学.json"}],"tags":[{"name":"数据科学","slug":"数据科学","count":1,"path":"api/tags/数据科学.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"异常点检测算法小结","uid":"5e9b9b13b72db5150ecf19d34ae2e64a","slug":"2018-08-02-novelty-detection","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-08-02-novelty-detection.json","cover":[],"text":"异常点检测，有时也叫离群点检测，英文一般叫做Novelty Detection或者Outlier Detection,是比较常见的一类非监督学习算法，这里就对异常点检测算法做一个总结。 异常点检测算法使用场景什么时候我们需要异常点检测算法呢？常见的有三种情况。 在做特征工程的时候...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":7,"path":"api/tags/机器学习.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"机器学习问题的通用方法","uid":"454e17e3669649f8307f998e0bce1204","slug":"2018-08-03-ml-normal-methods","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-08-03-ml-normal-methods.json","cover":[],"text":"一位数据科学家平均每天处理大量数据，有人说，超过60-70％的时间花在了数据采集、数据清理、数据整理上，使得机器学习模型可以应用于这些数据。本文重点介绍第二部分，即应用机器学习模型，包括预处理步骤。这篇文章中讨论的流水线是我参与过的一百多次机器学习竞赛的结果。必须指出，这里的讨论...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":7,"path":"api/tags/机器学习.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"Core ML vs ML Kit：哪一个移动端机器学习框架更适合你？","uid":"abd2edbd638b8074672349cf6622a4a2","slug":"2018-08-28-coreml-vs-mlkit","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-08-28-coreml-vs-mlkit.json","cover":"/images/coreml-vs-mlkit/cover.jpeg","text":"截止2018年举行的Apple全球开发者大会（WWDC2018），Apple公司的用于iOS设备的机器学习框架CoreML走过了一年的更新迭代，迎来了首次较大规模的版本更新。在同一时期，Google也发布了其一款面向iOS和安卓设备的跨平台人工智能开发框架。这两类工具的目的均是为...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":7,"path":"api/tags/机器学习.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"金融领域的机器学习：为什么、是什么、怎么做","uid":"103385dd62332f9ae264b41726da9a1d","slug":"2018-09-18-ML_in_finance","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-09-18-ML_in_finance.json","cover":"/images/ML_in_finance/ML_in_finance-infographic-011.jpg","text":"现如今，机器学习的发展可谓如火如荼，尤其是在金融领域，机器学习似乎具有了某种魔法，应用可谓非常广泛。尽管如此，机器学习项目的成功更多地取决于构建高效的基础架构，收集合适的数据以及应用正确的算法几个方面。 可以看到的是，机器学习正在金融服务行业取得重大的进展。那么为什么金融类企业应...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":7,"path":"api/tags/机器学习.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"机器学习基础介绍","uid":"2ddef7366c507d2b0030ac2779f34302","slug":"2018-09-20-Introduction_Of_Machine_Learning","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2018-09-20-Introduction_Of_Machine_Learning.json","cover":[],"text":"机器学习是一门从数据中提取知识的技术。 它是统计学、人工智能和计算机科学的交叉研究领域，被常被称为预测分析、统计学习。机器学习方法的应用近年来在日常生活中无处不在。从自动推荐看哪部电影、点什么食物或买什么东西，到个性化的在线收音机、智能化在线教育，再到从照片中找到你的朋友等等需要...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"22 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习","slug":"机器学习","count":7,"path":"api/tags/机器学习.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},{"title":"8大场景数据清洗Python代码","uid":"b1badcef23656fe021b375990b5cfa48","slug":"2019-01-22-data_cleaning","date":"2023-05-13T14:28:22.144Z","updated":"2023-05-13T14:28:22.144Z","comments":true,"path":"api/articles/2019-01-22-data_cleaning.json","cover":null,"text":"数据清洗是进行数据分析和使用数据训练模型的必经之路，也是最为耗费数据科学家、程序员的地方。 在数据清洗的过程中，绝大多数的场景下，所进行的清洗工作都是相似甚至是重复的，因此有必要将数据清洗工作的场景进行总结并给出对应的清洗代码，以便形成可适用于多数工程项目的工具箱。 涵盖8大场景...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"机器学习","slug":"机器学习","count":10,"path":"api/categories/机器学习.json"}],"tags":[{"name":"机器学习 Python","slug":"机器学习-Python","count":1,"path":"api/tags/机器学习-Python.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}}]}