{"title":"探索性数据分析入门","uid":"3158244125ce6cdd857a3a3ca56bd557","slug":"2019-11-04-simple-eda","date":"2023-05-18T03:03:50.454Z","updated":"2023-05-18T03:03:50.454Z","comments":true,"path":"api/articles/2019-11-04-simple-eda.json","keywords":null,"cover":"/images/simple-eda/cover.png","content":"<p>在数据科学领域里，最具挑战的问题之一便是如何确定数据对特定问题带来价值。在使用机器学习或者深度学习之前，确定数据或者特征是否利于特定问题，是数据科学后续工作的重中之重。</p>\n<p>因此，在进行数据科学问题之前，通常会对数据进行分析，洞察数据中所涵盖的深层特性是否利于特定问题，以及是否适用于所选用的机器学习算法等，而这一步被称为<strong>探索性数据分析（Exploratory Data Analysis， EDA）</strong>。</p>\n<p><strong>探索性数据分析（Exploratory Data Analysis，EDA）</strong> 是指对已有数据在尽量少的先验假设下通过作图、制表、方程拟合、计算特征量等手段探索数据的结构和规律的一种数据分析方法，该方法在上世纪70年代由美国统计学家J.K.Tukey提出。传统的统计分析方法常常先假设数据符合一种统计模型，然后依据数据样本来估计模型的一些参数及统计量，以此了解数据的特征，但实际中往往有很多数据并不符合假设的统计模型分布，这导致数据分析结果不理想。EDA则是一种更加贴合实际情况的分析方法，它强调让数据自身“说话”，通过EDA我们可以最真实、直接的观察到数据的结构及特征。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>探索性数据分析（EDA）是一种数据分析方法，它采用多种技术来最大化对数据集的洞察力。揭示底层结构；提取重要变量；检测异常值和异常；建立简约模型；并确定最佳因子设置。</strong></p></blockquote>\n<p><img src=\"/images/simple-eda/banner.png\"></p>\n<h2 id=\"从实战中学习EDA\"><a href=\"#从实战中学习EDA\" class=\"headerlink\" title=\"从实战中学习EDA\"></a>从实战中学习EDA</h2><p><strong>实践是检验整理的唯一途径。</strong> 为了能够更好更快的理解EDA，这里将直接从**<a href=\"https://archive.ics.uci.edu/ml/datasets/Iris\">鸢尾花数据集(UCI Machine Learning Repository)</a>**的探索性分析中学习EDA的方法。</p>\n<p><strong>目标：</strong> 从给定4个维度特征的鸢尾花数据集中学习，已确定新的鸢尾花属于3个鸢尾花类别中的哪一个类别。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>在进行EDA的过程中，需要始终牢记最初确立的目标，否则EDA可能偏离目标！</strong></p></blockquote>\n<h3 id=\"导入所需类库\"><a href=\"#导入所需类库\" class=\"headerlink\" title=\"导入所需类库\"></a>导入所需类库</h3><p>显而易见，进行Python语言相关的开发时，第一步基本上都是导入所需的类库（前提是类库已经被安装在当前坏境）。在进行EDA时，所需的类库可能并不是很多，满足需求即可，在这里，将导入像<em>Pandas、Matplotlib、numpy</em>等类库，对应类库的作用，可自行搜索学习。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport os</code></pre>\n\n<h3 id=\"下载数据并加载\"><a href=\"#下载数据并加载\" class=\"headerlink\" title=\"下载数据并加载\"></a>下载数据并加载</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">&#39;&#39;&#39;downlaod iris.csv from https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;uiuc-cse&#x2F;data-fa14&#x2F;gh-pages&#x2F;data&#x2F;iris.csv&#39;&#39;&#39;\n#Load Iris.csv into a pandas dataFrame.\niris &#x3D; pd.read_csv(&quot;.&#x2F;iris.csv&quot;)\niris.head()</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n      <th>species</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>5.1</td>\n      <td>3.5</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>4.9</td>\n      <td>3.0</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>4.7</td>\n      <td>3.2</td>\n      <td>1.3</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4.6</td>\n      <td>3.1</td>\n      <td>1.5</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>5.0</td>\n      <td>3.6</td>\n      <td>1.4</td>\n      <td>0.2</td>\n      <td>setosa</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<ul>\n<li>*.head()<em>函数是Pandas中的标准函数，用于观察数据集的数据详情，默认情况下返回数据集的前5个样本点。同时，</em>.tail()*函数返回数据集的后5个样本点。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Data-points and features\niris.shape</code></pre>\n\n\n\n\n<pre><code>(150, 5)\n</code></pre>\n<p><em>.shape</em>参数可以查看数据集的形状（行数、列数）。</p>\n<ul>\n<li>此处使用的鸢尾花数据集是一个150行和5列的数据集。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">iris.info()</code></pre>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 150 entries, 0 to 149\nData columns (total 5 columns):\nsepal_length    150 non-null float64\nsepal_width     150 non-null float64\npetal_length    150 non-null float64\npetal_width     150 non-null float64\nspecies         150 non-null object\ndtypes: float64(4), object(1)\nmemory usage: 6.0+ KB\n</code></pre>\n<p>*.info()*函数用于展示数据集列数据的数据类型情况。</p>\n<ul>\n<li>此处，数据只有float类型和object类型两种值类型数据；</li>\n<li>无变量或列包含null值或者缺失值。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">iris.columns</code></pre>\n\n\n\n\n<pre><code>Index([&#39;sepal_length&#39;, &#39;sepal_width&#39;, &#39;petal_length&#39;, &#39;petal_width&#39;,\n       &#39;species&#39;],\n      dtype=&#39;object&#39;)\n</code></pre>\n<ul>\n<li><em>.columns</em> 用来查看数据集的列或特征的名称。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">iris[&#39;species&#39;].value_counts()</code></pre>\n\n\n\n\n<pre><code>versicolor    50\nsetosa        50\nvirginica     50\nName: species, dtype: int64\n</code></pre>\n<ul>\n<li>*.value_counts()*是对数据集上特定列进行降序后，获取该列的每个值的计数值；</li>\n<li>此处，每一个种类（Versicolor, Setosa, Virginica）各有50个观察对象，因此该数据集应该是<strong>均匀分布</strong>的。</li>\n</ul>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">iris.describe()</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>sepal_length</th>\n      <th>sepal_width</th>\n      <th>petal_length</th>\n      <th>petal_width</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n      <td>150.000000</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>5.843333</td>\n      <td>3.054000</td>\n      <td>3.758667</td>\n      <td>1.198667</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.828066</td>\n      <td>0.433594</td>\n      <td>1.764420</td>\n      <td>0.763161</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>4.300000</td>\n      <td>2.000000</td>\n      <td>1.000000</td>\n      <td>0.100000</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>5.100000</td>\n      <td>2.800000</td>\n      <td>1.600000</td>\n      <td>0.300000</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>5.800000</td>\n      <td>3.000000</td>\n      <td>4.350000</td>\n      <td>1.300000</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>6.400000</td>\n      <td>3.300000</td>\n      <td>5.100000</td>\n      <td>1.800000</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>7.900000</td>\n      <td>4.400000</td>\n      <td>6.900000</td>\n      <td>2.500000</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n<ul>\n<li>*.describe()*函数用于获取数据集的各种汇总统计信息。该函数返回计数值、均值、标准差、最小值和最大值、以及数据的分位数。</li>\n</ul>\n<p>至此，对数据集来说已经有了一个基础的了解，对于数据的探索性分析来说，这才刚刚开始，往往通过对数据的图形化描述能够更加详细的了解数据特征之间的关系等，包括单变量和多变量分析等。</p>\n<h2 id=\"二维散点图\"><a href=\"#二维散点图\" class=\"headerlink\" title=\"二维散点图\"></a>二维散点图</h2><p>散点图是一种将数据显示为点集合的图。点的位置取决于其二维值，每个值都是水平或者垂直维度上的位置。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 2-D Scatter plot with color-coding for each flower type&#x2F;class.\n# Here &#39;sns&#39; corresponds to seaborn\nsns.set_style(&#39;whitegrid&#39;)\nsns.FacetGrid(iris, hue&#x3D;&#39;species&#39;, height&#x3D;8) \\\n    .map(plt.scatter, &#39;sepal_length&#39;, &#39;sepal_width&#39;) \\\n    .add_legend()\nplt.show()</code></pre>\n\n\n<p><img src=\"/images/simple-eda/output_21_0.png\" alt=\"png\"></p>\n<p>Seaborn中的<em>FacetGrid</em>类有助于使用多个面板在数据集的子集中可视化一个变量的分布以及多个变量之间的关系。参数<em>hue</em>根据与每个参数相关的颜色将数据点分开。</p>\n<p>三个类别的数据点根据<em>sepal_length</em>分散。</p>\n<ul>\n<li>使用<em>sepal_length</em>和<em>sepal_width</em>特征，可以区分Setosa同其他类别（线性可分）；</li>\n<li>区分Versicolor和Virginica相对困难一点，因为它们之间有大量的重叠部分。</li>\n</ul>\n<h2 id=\"对图\"><a href=\"#对图\" class=\"headerlink\" title=\"对图\"></a>对图</h2><p>对图有助于查看数据中单个变量的分布以及多个变量之间的关系。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># pairwise scatter plot: Pair-Plot\n# Dis-advantages: Cannot visualize higher dimensional patterns in 3-D and 4-D.\n# Only possible to view 2D patterns.\nplt.close()\nsns.pairplot(iris, hue&#x3D;&#39;species&#39;, size&#x3D;3)\nplt.show()</code></pre>\n\n\n<p><img src=\"/images/simple-eda/output_24_0.png\" alt=\"png\"></p>\n<ul>\n<li><em>petal_length</em>和<em>petal_width</em>是区分各种类型鸢尾花的重要特征；</li>\n<li>Setosa类型的鸢尾花很容易被识别（线性可分），Virginica和Versicolor的特征有一些重叠（接近于线性可分）；</li>\n<li>可以找到“分割线”或者“if-else”条件来建立一个简单的模型，对鸢尾花的类型进行分类。</li>\n</ul>\n<h2 id=\"直方图和PDF（概率密度函数）\"><a href=\"#直方图和PDF（概率密度函数）\" class=\"headerlink\" title=\"直方图和PDF（概率密度函数）\"></a>直方图和PDF（概率密度函数）</h2><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">sns.FacetGrid(iris, hue&#x3D;&#39;species&#39;, height&#x3D;8) \\\n    .map(sns.distplot, &#39;petal_length&#39;) \\\n    .add_legend()\nplt.show()</code></pre>\n\n\n<p><img src=\"/images/simple-eda/output_27_0.png\" alt=\"png\"></p>\n<p><em>distplot()</em> 函数绘制了各种鸢尾花类型的<em>petal_length</em>的分布。图中蓝色代表Setosa类型鸢尾花的<em>petal_length</em>的直方图，黄色、绿色类似。y轴代表x轴上一个小窗口或者一个间隔中存在的数据点的数量，意味着在x轴上给定一个点或者区域，该点或者区域上直方图的高度代表x轴上该点或者区域有多少数据点。在上图中小窗口定义为<em>petal_length</em>。</p>\n<p>直方图的高度越高，即在给定的区域内密度越大，则找到的种类和花瓣的长度值之间的对应越多。因此上图也称为<strong>概率密度图</strong>，通过对直方图进行平滑处理（KDE）制成的图像曲线为PDF，即概率密度函数曲线。</p>\n<p><strong>结论：</strong></p>\n<ul>\n<li>如果 <code>petal_length ≤ 2</code>，种类为 Setosa；</li>\n<li>如果 <code>petal_length ＞ 2</code>，并且 <code>petal_length ≤ 4.7</code>，种类为 Versicolor；</li>\n<li>如果 <code>petal_length ≥ 4.7</code>，种类为 Virginica；</li>\n<li>另一个结论是，通过 <code>petal_length</code> 单变量的分析，对于区分不同的鸢尾花种类很有帮助，仅仅使用这一个特征，可以构建一个使用if-else条件判定的简单模型。</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在区分Versicolor的时候，使用了4.7作为分界点，而不是5的原因是， <code>petal_length ≤ 4.7</code>条件下，分类结果更多的可能性是Versicolor，而不是Virginica，这也和数据可视化的结果更为接近。</p></blockquote>\n<p>当然，也可以使用<em>petal_width</em>、<em>sepal_length</em>、<em>sepal_width</em>进行单变量的分析，但是最终的结果可能并没有使用<em>petal_length</em>的结果好。</p>\n<p>PDF的局限性在于，无法查看其直观的图标或者统计性数据。例如，无法根据<em>petal_length</em>单变量分析，看到<code>petal_length ＜ 5</code>的情况下，属于Versicolor类型数据的百分比等。</p>\n<p>鉴于此，还需要使用CDF（累积分布函数）。</p>\n<h2 id=\"CDF（累积分布函数）\"><a href=\"#CDF（累积分布函数）\" class=\"headerlink\" title=\"CDF（累积分布函数）\"></a>CDF（累积分布函数）</h2><p>累积分布函数计算给定x值的累积概率。可以使用CDF来确定从总体中抽取的随机观察值小于或者等于某个值的可能性。</p>\n<p>CDF的优势在于可以通过可视化的方式查看，例如查看Setosa类型的鸢尾花，<em>petal_length</em> 小于1.6的百分比。PDF和直方图无法提供相同的确切的百分比，PDF只是分布图。</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Need for Cumulative Distribution Function (CDF)\n# We can visually see what percentage of setosa flowers have a\n# petal_length of less than 1.6\n\n# Plot CDF petal_length\niris_setosa &#x3D; iris.loc[iris[&#39;species&#39;] &#x3D;&#x3D; &#39;setosa&#39;]\niris_virginica &#x3D; iris.loc[iris[&#39;species&#39;] &#x3D;&#x3D; &#39;virginica&#39;]\niris_versicolor &#x3D; iris.loc[iris[&#39;species&#39;] &#x3D;&#x3D; &#39;versicolor&#39;]\n\ncounts, bin_edges &#x3D; np.histogram(iris_setosa[&#39;petal_length&#39;], bins&#x3D;10, density&#x3D;True)\n\npdf &#x3D; counts&#x2F;(sum(counts))\nprint(pdf)\nprint(bin_edges)\n\n# compute CDF\ncdf &#x3D; np.cumsum(pdf)\nplt.plot(bin_edges[1:], pdf, label&#x3D;&#39;PDF&#39;)\nplt.plot(bin_edges[1:], cdf, label&#x3D;&#39;CDF&#39;)\n\nplt.legend()\nplt.show()</code></pre>\n\n<pre><code>[0.02 0.02 0.04 0.14 0.24 0.28 0.14 0.08 0.   0.04]\n[1.   1.09 1.18 1.27 1.36 1.45 1.54 1.63 1.72 1.81 1.9 ]\n</code></pre>\n<p><img src=\"/images/simple-eda/output_30_1.png\" alt=\"png\"></p>\n<p>示例代码中构建了三个数据框对应三种不同的鸢尾花种类。图中x轴代表<em>petal_length</em>，y轴则是对应的累积分布概率。</p>\n<p><code>cumsum()</code>函数是NumPy类库中通过PDF计算CDF的方法。</p>\n<ul>\n<li>假设<code>petal_length</code>的值我们关心的是1.6。对于1.6，数据中有接近82%的Setosa类型鸢尾花，<code>petal_length ≤ 1.6</code>。即意味着在总共50朵Setosa鸢尾花中，有41朵的<code>petal_length ≤ 1.6</code>；</li>\n<li>根据CDF也可以得到所有Setosa鸢尾花的<code>petal_length ≤ 1.9</code>。</li>\n</ul>\n<h3 id=\"一张图中查看三种类型鸢尾花的单变量CDF\"><a href=\"#一张图中查看三种类型鸢尾花的单变量CDF\" class=\"headerlink\" title=\"一张图中查看三种类型鸢尾花的单变量CDF\"></a>一张图中查看三种类型鸢尾花的单变量CDF</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Plots of CDF of petal_length for various types of flowers.\n\n# Misclassification error if you use petal_length only.\n\n# setosa\ncounts, bin_edges &#x3D; np.histogram(iris_setosa[&#39;petal_length&#39;], bins&#x3D;10, density&#x3D;True)\npdf &#x3D; counts&#x2F;(sum(counts))\nprint(&#39;setosa_pdf:&#39;, pdf)\nprint(&#39;setosa_bin_edges:&#39;,bin_edges)\ncdf &#x3D; np.cumsum(pdf)\nplt.plot(bin_edges[1:], pdf, label&#x3D;&#39;setosa_pdf&#39;)\nplt.plot(bin_edges[1:], cdf, label&#x3D;&#39;setosa_cdf&#39;)\n\n# virginica\ncounts, bin_edges &#x3D; np.histogram(iris_virginica[&#39;petal_length&#39;], bins&#x3D;10, density&#x3D;True)\npdf &#x3D; counts&#x2F;(sum(counts))\nprint(&#39;virginica_pdf:&#39;,pdf)\nprint(&#39;virginica_bin_edges:&#39;,bin_edges)\ncdf &#x3D; np.cumsum(pdf)\nplt.plot(bin_edges[1:], pdf, label&#x3D;&#39;virginica_pdf&#39;)\nplt.plot(bin_edges[1:], cdf, label&#x3D;&#39;virginica_cdf&#39;)\n\n# versicolor\ncounts, bin_edges &#x3D; np.histogram(iris_versicolor[&#39;petal_length&#39;], bins&#x3D;10, density&#x3D;True)\npdf &#x3D; counts&#x2F;(sum(counts))\nprint(&#39;versicolor_pdf:&#39;,pdf)\nprint(&#39;versicolor_bin_edges:&#39;,bin_edges)\ncdf &#x3D; np.cumsum(pdf)\nplt.plot(bin_edges[1:], pdf, label&#x3D;&#39;versicolor_pdf&#39;)\nplt.plot(bin_edges[1:], cdf, label&#x3D;&#39;versicolor_cdf&#39;)\n\nplt.legend()\nplt.show()</code></pre>\n\n<pre><code>setosa_pdf: [0.02 0.02 0.04 0.14 0.24 0.28 0.14 0.08 0.   0.04]\nsetosa_bin_edges: [1.   1.09 1.18 1.27 1.36 1.45 1.54 1.63 1.72 1.81 1.9 ]\nvirginica_pdf: [0.02 0.1  0.24 0.08 0.18 0.16 0.1  0.04 0.02 0.06]\nvirginica_bin_edges: [4.5  4.74 4.98 5.22 5.46 5.7  5.94 6.18 6.42 6.66 6.9 ]\nversicolor_pdf: [0.02 0.04 0.06 0.04 0.16 0.14 0.12 0.2  0.14 0.08]\nversicolor_bin_edges: [3.   3.21 3.42 3.63 3.84 4.05 4.26 4.47 4.68 4.89 5.1 ]\n</code></pre>\n<p><img src=\"/images/simple-eda/output_32_1.png\" alt=\"png\"></p>\n<p><strong>通过可视化，可以得到如下的结论：</strong></p>\n<ul>\n<li>如果 <code>petal_length ≤ 2</code>，则鸢尾花的类型为Setosa，并且正确率接近于100%；</li>\n<li>如果 <code>petal_length ＞ 2</code>并且 <code>petal_length ≤ 5</code>：<ul>\n<li><strong>鸢尾花种类为Virginica。</strong> 此结论的正确性可能只有10%，因为在<code>petal_length = 5</code>情况下，CDF的值为10，同理，再次区间判定结果有90%的错误可能；</li>\n<li><strong>鸢尾花种类为Versicolor。</strong> 此结论的正确率为95%，因为在<code>petal_length = 5</code>时，Virginica的CDF值为95。</li>\n</ul>\n</li>\n<li>当 <code>petal_length</code>位于5到7之间，并且如果在此处将一个鸢尾花的种类定为Virginica，则正确预测该种类的可能性为90%，10%的可能性为Versicolor。</li>\n</ul>\n<h2 id=\"箱须图（Box-and-Whisker-Plots）\"><a href=\"#箱须图（Box-and-Whisker-Plots）\" class=\"headerlink\" title=\"箱须图（Box-and-Whisker Plots）\"></a>箱须图（Box-and-Whisker Plots）</h2><p>箱形图（或箱须图）以有助于变量之间比较的方式显示定量数据的分布 Box显示数据集的四分位数，而Whisker显示其余分布。</p>\n<p>箱须图是显示数据分布的一种标准化方法，该方法基于以下五个数据的摘要绘制：</p>\n<ul>\n<li>最小值</li>\n<li>最大值</li>\n<li>中位数</li>\n<li>第一个四分位数</li>\n<li>第三个四分位数</li>\n</ul>\n<p>在一个简单的箱形图中，中心矩形跨越第一个四分位数到第三个四分位数（四分位数间距或IQR）。</p>\n<p><strong>Box Plot</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># Box-plot with whiskers: another method of visualizing the 1-D scatter plot more untuitivey.\n\n# NOTE: In the plot below, a technique call inter-quartile range is used in plotting the whiskers.\n# Whiskers in the plot below donot correposnd to the min and max values.\n\n# Box-plot can be visualized as a PDF on the side-ways.\n\nsns.boxplot(x&#x3D;&#39;species&#39;, y&#x3D;&#39;petal_length&#39;, data&#x3D;iris)\nplt.show()</code></pre>\n\n\n<p><img src=\"/images/simple-eda/output_35_0.png\" alt=\"png\"></p>\n<p><strong>Whisker Plot</strong></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># A violin Plot combines the benefits of the previous two plots and simplifies them\n\n# Denser regions of the data are fatter, and sparser ones thinner in a violin plot\n\nsns.violinplot(x&#x3D;&#39;species&#39;, y&#x3D;&#39;petal_length&#39;, data&#x3D;iris, size&#x3D;8)\nplt.show()</code></pre>\n\n\n<p><img src=\"/images/simple-eda/output_37_0.png\" alt=\"png\"></p>\n<h2 id=\"仓促的结语\"><a href=\"#仓促的结语\" class=\"headerlink\" title=\"仓促的结语\"></a>仓促的结语</h2><p>在本文中，粗略的对数据科学问题的前期工作—探索性数据分析，进行了简单的介绍，从中可以了解到如何进行数据的EDA，并从EDA中了解到数据的深层特性，对后续的特征抽取和建模具有非常大的意义。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在文中，部分内容并没有深入进行介绍，与其说本文是介绍EDA，倒不如是针对EDA阶段如何一步一步的深入到数据内部的简单了解，希望对您有帮助。</p></blockquote>\n","text":"在数据科学领域里，最具挑战的问题之一便是如何确定数据对特定问题带来价值。在使用机器学习或者深度学习之前，确定数据或者特征是否利于特定问题，是数据科学后续工作的重中之重。 因此，在进行数据科学问题之前，通常会对数据进行分析，洞察数据中所涵盖的深层特性是否利于特定问题，以及是否适用于...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"数据科学","slug":"数据科学","count":2,"path":"api/categories/数据科学.json"}],"tags":[{"name":"数据科学 Python","slug":"数据科学-Python","count":1,"path":"api/tags/数据科学-Python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%8E%E5%AE%9E%E6%88%98%E4%B8%AD%E5%AD%A6%E4%B9%A0EDA\"><span class=\"toc-text\">从实战中学习EDA</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AF%BC%E5%85%A5%E6%89%80%E9%9C%80%E7%B1%BB%E5%BA%93\"><span class=\"toc-text\">导入所需类库</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8B%E8%BD%BD%E6%95%B0%E6%8D%AE%E5%B9%B6%E5%8A%A0%E8%BD%BD\"><span class=\"toc-text\">下载数据并加载</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%8C%E7%BB%B4%E6%95%A3%E7%82%B9%E5%9B%BE\"><span class=\"toc-text\">二维散点图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E5%9B%BE\"><span class=\"toc-text\">对图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%92%8CPDF%EF%BC%88%E6%A6%82%E7%8E%87%E5%AF%86%E5%BA%A6%E5%87%BD%E6%95%B0%EF%BC%89\"><span class=\"toc-text\">直方图和PDF（概率密度函数）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CDF%EF%BC%88%E7%B4%AF%E7%A7%AF%E5%88%86%E5%B8%83%E5%87%BD%E6%95%B0%EF%BC%89\"><span class=\"toc-text\">CDF（累积分布函数）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%80%E5%BC%A0%E5%9B%BE%E4%B8%AD%E6%9F%A5%E7%9C%8B%E4%B8%89%E7%A7%8D%E7%B1%BB%E5%9E%8B%E9%B8%A2%E5%B0%BE%E8%8A%B1%E7%9A%84%E5%8D%95%E5%8F%98%E9%87%8FCDF\"><span class=\"toc-text\">一张图中查看三种类型鸢尾花的单变量CDF</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AE%B1%E9%A1%BB%E5%9B%BE%EF%BC%88Box-and-Whisker-Plots%EF%BC%89\"><span class=\"toc-text\">箱须图（Box-and-Whisker Plots）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%93%E4%BF%83%E7%9A%84%E7%BB%93%E8%AF%AD\"><span class=\"toc-text\">仓促的结语</span></a></li></ol>","author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}},"mapped":true,"prev_post":{"title":"关于iOS App启动时间的那些事","uid":"065e711203c90529e076df9f2cdf951d","slug":"2019-10-30-app-start-time-measure-and-improvement","date":"2023-05-18T03:03:50.454Z","updated":"2023-05-18T03:03:50.454Z","comments":true,"path":"api/articles/2019-10-30-app-start-time-measure-and-improvement.json","keywords":null,"cover":"/images/start-time/cover.jpg","text":"在iOS应用程序的开发过程中，应用的启动时长可谓是影响应用程序用户体验的第一要素，过长的应用启动耗时，势必带来用户的长时间等待，直接让用户失去了对应用程序进一步体验的兴趣，影响应用程序在用户心中的印象。一般情况下，应用程序开发完成上线后，接下来就是针对架构、性能、业务进行进一步优...","link":"","photos":[],"count_time":{"symbolsCount":"5.5k","symbolsTime":"5 mins."},"categories":[{"name":"开发知识","slug":"开发知识","count":9,"path":"api/categories/开发知识.json"}],"tags":[{"name":"开发知识 iOS","slug":"开发知识-iOS","count":7,"path":"api/tags/开发知识-iOS.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}}},"next_post":{"title":"如何成为更好的iOS开发工程师之S.O.L.I.D原则","uid":"2c512333e4536b8feed1c221955d12fa","slug":"2019-11-06-solid-principles-for-becoming-a-better-ios-developer","date":"2023-05-18T03:03:50.454Z","updated":"2023-05-18T03:03:50.454Z","comments":true,"path":"api/articles/2019-11-06-solid-principles-for-becoming-a-better-ios-developer.json","keywords":null,"cover":"/images/solid/cover.jpg","text":"在互联网时代，S.O.L.I.D原则可谓影响力久远，在计算机程序设计语言以及各个平台特性中都有S.O.L.I.D的身影，S.O.L.I.D原则也指导着软件工程的设计与编码工程。iOS平台的软件开发亦是软件开发领域的一支，S.O.L.I.D原则也同样对iOS软件开发有效，并且做称为...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"技术人生","slug":"技术人生","count":10,"path":"api/categories/技术人生.json"}],"tags":[{"name":"开发知识 技术人生","slug":"开发知识-技术人生","count":1,"path":"api/tags/开发知识-技术人生.json"}],"author":{"slug":"undefined","avatar":"/img/avatar.jpg","link":"https://github.com/zycslog","description":"","socials":{}},"feature":true}}